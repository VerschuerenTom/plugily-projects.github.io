(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[7207],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return s},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),p=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,h=u["".concat(d,".").concat(m)]||u[m]||c[m]||l;return a?r.createElement(h,o(o({ref:t},s),{},{components:a})):r.createElement(h,o({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8074:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var r=a(4034),n=a(9973),l=(a(7294),a(3905)),o=["components"],i={id:"placeholderapi",title:"PlaceholderAPI",sidebar_label:"PlaceholderAPI"},d=void 0,p={unversionedId:"thebridge/placeholders/placeholderapi",id:"thebridge/placeholders/placeholderapi",isDocsHomePage:!1,title:"PlaceholderAPI",description:"---",source:"@site/docs/thebridge/placeholders/placeholderapi.md",sourceDirName:"thebridge/placeholders",slug:"/thebridge/placeholders/placeholderapi",permalink:"/thebridge/placeholders/placeholderapi",editUrl:"https://github.com/Plugily-Projects/plugily-projects.github.io/blob/documentation/docs/thebridge/placeholders/placeholderapi.md",tags:[],version:"current",lastUpdatedBy:"Tigerpanzer_02",lastUpdatedAt:1620594140,formattedLastUpdatedAt:"5/9/2021",frontMatter:{id:"placeholderapi",title:"PlaceholderAPI",sidebar_label:"PlaceholderAPI"},sidebar:"thebridge",previous:{title:"Free maps",permalink:"/thebridge/setup/maps"},next:{title:"Scoreboard",permalink:"/thebridge/placeholders/scoreboard"}},s=[{value:"Statistics placeholders",id:"statistics-placeholders",children:[],level:2},{value:"Arena-related placeholders",id:"arena-related-placeholders",children:[],level:2}],c={toc:s};function u(e){var t=e.components,a=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,"'Search for different placeholders, to customize your plugin experience'"),(0,l.kt)("p",null,"These are the ",(0,l.kt)("strong",{parentName:"p"},"PlaceholderAPI")," ","(","PAPI",")"," placeholders for TheBridge. They are included with the plugin, so you do not have to download an expansion from the papi ecloud."),(0,l.kt)("h2",{id:"statistics-placeholders"},"Statistics placeholders"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Placeholder"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","kills%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows your kills")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","deaths%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows your deaths")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","games","_","played%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows your played games count")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","wins%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows all wins a player got")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","loses%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows all loses a player got")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","points%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows all scored points a player got")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","level%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows your current level")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","exp%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows your exp amount ","(","decimal number",")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","exp","_","to","_","next","_","level%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows amount of exp need to level up")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","arena","_","players","_","online%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the player amount of all arenas together")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","base","_","color%"),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the base color of the player as color")))),(0,l.kt)("h2",{id:"arena-related-placeholders"},"Arena-related placeholders"),(0,l.kt)("p",null,"These are special PAPI placeholders that can be defined for each arena you have. You need to replace {arena} with your arena name."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},'Your arena name is "coaster" -',">"," %thebridge","_","coaster:players%"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Placeholder"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:players%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the amount of players in arena")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:max","_","players%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the max players in arena")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:state%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the current state raw enum name eg. STARTING")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:state","_","pretty%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the prettified name of enum eg. Waiting ","(","instead WAITING","_","FOR","_","PLAYERS",")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:mapname%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the name of arena map")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:mode%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the mode ","(","eg. POINTS",")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:basesize%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows the base size of the arena")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:modevalue%"),(0,l.kt)("td",{parentName:"tr",align:null},"The value to reach to trigger the mode goal")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"%thebridge","_","{arena}:resetblocks%"),(0,l.kt)("td",{parentName:"tr",align:null},"Shows after which round it will reset the placed blocks")))))}u.isMDXComponent=!0}}]);